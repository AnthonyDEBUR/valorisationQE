% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/f_graph_pluviometrie.R
\name{f_graph_pluviometrie}
\alias{f_graph_pluviometrie}
\title{f_graph_pluviometrie}
\usage{
f_graph_pluviometrie(shp_territoire, dateprel, nb_jours = 5, con)
}
\arguments{
\item{shp_territoire}{: objet sf pour lequel on veut les informations de
pluviométrie}

\item{dateprel}{: date du dernier jour du graphique}

\item{nb_jours}{: nombre de jours au total pour lesquels on affiche les
précipitations}

\item{con}{: connexion vers la base de données météo}
}
\value{
Objet ggplot avec un histogramme sur les précipitations des 5 derniers jours.
}
\description{
Cette fonction génère un graphique de la pluviométrie de la date et des 4
jours précédents.
La pluviométrie est évaluée au plus prêt du centroïde de shp_territoire.
S'il y a une ou plusieurs stations Météo France dans le shp_territoire, les
valeurs affichées sont celles de la station la plus proche du centroïde.
}
\details{
S'il n'y a pas de station Météo France dans l'emprise de shp_territoire,
alors les précipitations sont estimées par krigeage.
}
\examples{

if (interactive()) {
  config_path <- "C://workspace//gwilenalim//yaml//config.yml"
  if (file.exists(config_path)) {
    library(RPostgres)
    library(meteo4Vilaine)
    config <- yaml::read_yaml(config_path)
    con <- tryCatch({
      DBI::dbConnect(
        RPostgres::Postgres(),
        host = config$host,
        port = config$port,
        user = config$user,
        password = config$password,
        dbname = config$dbname
      )
    }, error = function(e) NULL)
    
    
    
    if (!is.null(con)) {
      
      triangle_sf <- sf::st_sf(
        geometry = sf::st_sfc(
          sf::st_polygon(list(rbind(
            c(-1.6794, 48.1147),  # Rennes
            c(-1.2100, 48.1230),  # Vitré
            c(-1.5025, 47.6833),  # Derval
            c(-1.6794, 48.1147)   # Retour à Rennes
          )))
        ),
        crs = 4326
      )
      
      g<-f_graph_pluviometrie(triangle_sf, date = as.Date("2025-09-11"), con)
      DBI::dbDisconnect(con)
      print(g)
    } else {
      message("Connexion à la base impossible, exemple non exécuté.")
    }
  } else {
    message("Fichier de configuration introuvable.")
  }
}

knitr::include_graphics(system.file("extdata", "graph_pluvio.png", package = "valorisationQE"))


}
